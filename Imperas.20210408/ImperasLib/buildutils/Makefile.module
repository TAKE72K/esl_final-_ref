#
# Host gcc
# Makefile for compiling OP module to module so/dll
#

IMPERAS_HOME := $(shell getpath.exe "$(IMPERAS_HOME)")
include $(IMPERAS_HOME)/bin/Makefile.include

ifndef IMPERAS_HOME
	IMPERAS_ERROR := $(error "IMPERAS_HOME not defined")
endif

include $(IMPERAS_HOME)/ImperasLib/buildutils/Makefile.common

SRC?=module.c
SUFFIX=$(suffix $(SRC))

ifeq ($(SUFFIX),)
  IMPERAS_ERROR:=$(error Please specify full module source file name. File suffix could not be determined!)
endif

ifeq ($(SUFFIX),.c)
    CC=$(HOST_GCC)
else
    CC=$(HOST_GXX)
    SIM_LDFLAGS += $(SIM_LDXXFLAGS)
    SIM_CFLAGS  += $(SIM_CXXFLAGS)
endif

#
# Additional dependency
#
PDEP = $(patsubst %$(SUFFIX), $(OBJDIR)/%.d, $(SRC))

# Shared object
SHAREDOBJ?=model.$(IMPERAS_SHRSUF)
# object
MODULEOBJ?=$(OBJDIR)/$(SRC:$(SUFFIX)=.o)

#
# module.op.tcl -> module.c(module.c.igen.stubs) -> model.so/dll
#
IGEN?= igen.exe
IGENFLAGS?= --quiet --nobanner --excludem GPT_NH --excludem GPT_UFNR $(EXTRA_IGENFLAGS)

MODULE-OP-TCL  ?= $(wildcard module.op.tcl)
MODULE-OP-SRC  ?= $(patsubst %.op.tcl, %.c.igen.stubs, $(MODULE-OP-TCL))
MODULE-OP-INC  ?= $(patsubst %.op.tcl, %.igen.h,       $(MODULE-OP-TCL))

#
# Does the SRC exist ?
#
COPYSTUBS = 0
ifeq ($(wildcard $(SRC)),)
    COPYSTUBS = 1
endif

ALL = $(WORKDIR)/$(SHAREDOBJ)

# Additional target
NOFPK?=0
ifeq ($(NOFPK),0)
-include $(IMPERAS_HOME)/ImperasLib/buildutils/fpk/Makefile.fpk.tgt.module
endif

all: $(ALL)

# include all the dependancy requirements
ifneq ($(MAKECMDGOALS),clean)
    $(foreach dep,$(PDEP),$(eval -include $(dep)))
endif

# Only one PLATFORM SRC can ever exist
$(SRC): $(MODULE-OP-SRC)
ifeq ($(COPYSTUBS),1)
ifneq ($(strip $(MODULE-OP-SRC)),)
	@ echo "# Copying STUBS $(^) to $(@)"
	$(V) cp $(^) $(@)
endif
else
	@ echo "# No Update to existing $(@). Compare with $(^) if changes made to iGen file $(MODULE-OP-TCL)"
endif

#
# OP Module
#
$(MODULE-OP-SRC) $(MODULE-OP-INC): $(MODULE-OP-TCL)
	@ echo "# iGen Create OP MODULE $(MODULE-OP-SRC)"
	$(V) $(IGEN) $(IGENFLAGS) \
		--op \
		--batch  $(<) \
		--writec $(MODULE-OP-SRC) \
		$(WRITEHEADER) \
		--overwrite

$(WORKDIR)/$(SHAREDOBJ): $(MODULEOBJ)
	$(V) mkdir -p $(@D)
	@ echo "# Host Linking Module object $@"
	$(V) $(CC) -shared -o $@ $^ $(SIM_LDFLAGS) $(LDFLAGS)

# Allowed suffixes
SRC_SUFFIX = c cpp c++ cxx

define SRC_SUFFIX_Template
$(OBJDIR)/%.d: %.$(1)
	@ echo "# Host Depending $$@"
	$$(V) mkdir -p $$(@D)
	$$(V) $$(CC) -MM $$< $$(SIM_CFLAGS) $$(CFLAGS) $$(LDFLAGS) -MT $$(OBJDIR)/$$*.o -MF $$@

$(OBJDIR)/%.o: %.$(1)
	$$(V) mkdir -p $$(@D)
	@ echo "# Host Compiling Module $$@"
	$$(V) $$(CC) -c -o $$@ $$< $$(SIM_CFLAGS) $$(CFLAGS)
endef
$(foreach X,$(SRC_SUFFIX),$(eval $(call SRC_SUFFIX_Template,$(X))))

# Additional rules
NOFPK?=0
ifeq ($(NOFPK),0)
-include $(IMPERAS_HOME)/ImperasLib/buildutils/fpk/Makefile.fpk.module
endif

clean::
	$(V) - rm -f $(ALL)
ifneq ($(wildcard $(OBJROOT)),)
	$(V) - rm -rf $(OBJROOT)
endif
ifneq ($(wildcard $(MODULE-OP-SRC)),)
	$(V) - rm -f $(MODULE-OP-SRC) 
endif
ifneq ($(wildcard $(MODULE-OP-INC)),)
	$(V) - rm -f $(MODULE-OP-INC) 
endif
